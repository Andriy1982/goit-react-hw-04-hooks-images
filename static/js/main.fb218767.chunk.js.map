{"version":3,"sources":["Component/Searchbar/Searchbar.js","Component/Modal/Modal.js","Component/ImageGalleryItem/ImageGalleryItem.js","Component/ImageGallery/ImageGallery.js","Component/Button/Button.js","Services/images-api.js","Component/App/App.js","index.js"],"names":["Searchbar","state","searchImage","handleInputChange","e","setState","target","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","alert","this","className","type","onChange","autoComplete","autoFocus","placeholder","Component","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","createPortal","onClick","children","ImageGalleryItem","showModal","toggleModal","url","user","largeImageURL","src","alt","ImageGallery","images","map","id","webformatURL","Button","onClickButton","KEY","api","fetchImages","page","fetch","then","res","ok","json","Promise","reject","Error","App","currentPage","isLoading","handleFormSubmit","imagesApi","hits","prevState","prevProps","length","scrollTo","top","documentElement","scrollHeight","behavior","style","textAlign","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fb218767.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Searchbar.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    searchImage: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    this.setState({\r\n      searchImage: e.target.value.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.searchImage.trim() === '') {\r\n      alert('Enter a name for the picture');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.searchImage);\r\n    this.setState({\r\n      searchImage: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { searchImage } = this.state;\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.handleInputChange}\r\n            value={searchImage}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Modal__backdrop\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal__content\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './ImageGalleryItem.css';\r\nimport Modal from '../Modal';\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  state = { showModal: false };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { url, user, largeImageURL } = this.props;\r\n    const { showModal } = this.state;\r\n    return (\r\n      <>\r\n        <li className=\"ImageGalleryItem\">\r\n          <img\r\n            src={url}\r\n            alt={user}\r\n            onClick={this.toggleModal}\r\n            className=\"ImageGalleryItem-image\"\r\n          />\r\n        </li>\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <img className=\"ImageModal\" src={largeImageURL} alt={user} />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGallery.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nexport default class ImageGallery extends Component {\r\n  static propTypes = {\r\n    images: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        webformatURL: PropTypes.string.isRequired,\r\n        user: PropTypes.string.isRequired,\r\n        largeImageURL: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n  };\r\n\r\n  render() {\r\n    const { images } = this.props;\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n        {images &&\r\n          images.map(({ id, webformatURL, user, largeImageURL }) => (\r\n            <ImageGalleryItem\r\n              key={id}\r\n              url={webformatURL}\r\n              user={user}\r\n              largeImageURL={largeImageURL}\r\n            />\r\n          ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.css';\r\n\r\nfunction Button({ onClickButton }) {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={onClickButton}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClickButton: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","const KEY = '18396149-73dfa4d2cc3cf60487110b893';\r\n\r\nfunction fetchImages(searchImage = '', page = 1) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${searchImage}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(\r\n      new Error(`Нет картинки с таким именем ${searchImage}`),\r\n    );\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchImages,\r\n};\r\n\r\nexport default api;\r\n","import React, { Component } from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport Searchbar from '../Searchbar';\r\nimport ImageGallery from '../ImageGallery';\r\nimport Button from '../Button';\r\n\r\nimport imagesApi from '../../Services/images-api';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    images: [],\r\n    currentPage: 1,\r\n    searchImage: '',\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.searchImage !== this.state.searchImage) {\r\n      this.fetchImages();\r\n    }\r\n\r\n    if (this.state.images.length !== prevState.images.length) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }\r\n\r\n  handleFormSubmit = searchImage => {\r\n    this.setState({ searchImage, currentPage: 1, images: [] });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { searchImage, currentPage } = this.state;\r\n    this.setState({ isLoading: true });\r\n    imagesApi.fetchImages(searchImage, currentPage).then(({ hits }) =>\r\n      this.setState(prevState => ({\r\n        images: [...prevState.images, ...hits],\r\n        currentPage: prevState.currentPage + 1,\r\n        isLoading: false,\r\n      })),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading } = this.state;\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.handleFormSubmit} />\r\n        {images.length > 0 && <ImageGallery images={images} />}\r\n        {isLoading && (\r\n          <Loader\r\n            style={{ textAlign: 'center' }}\r\n            type=\"ThreeDots\"\r\n            color=\"#00BFFF\"\r\n            height={80}\r\n            width={80}\r\n            timeout={5000}\r\n          />\r\n        )}\r\n        {images.length > 0 && !isLoading && (\r\n          <Button onClickButton={this.fetchImages} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Component/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}